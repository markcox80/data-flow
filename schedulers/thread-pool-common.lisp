(in-package "DATA-FLOW.THREAD-POOL")

(defparameter *default-poll-seconds* 0.0001)

(defgeneric execute-runnable-p (thread-pool runnable))

(defun default-make-thread-environment-hook ()
  (let* ((current-standard-output *standard-output*)
         (current-error-output *error-output*)
         (current-debug-io *debug-io*)
         (current-standard-input *standard-input*)
         (current-debugger-hook *debugger-hook*)
         (current-query-io *query-io*)
         (current-trace-output *trace-output*)
         (current-terminal-io *terminal-io*))
    (lambda (function)
      (let* ((*standard-output* current-standard-output)
             (*error-output* current-error-output)
             (*debug-io* current-debug-io)
             (*standard-input* current-standard-input)
             (*debugger-hook* current-debugger-hook)
             (*query-io* current-query-io)
             (*trace-output* current-trace-output)
             (*terminal-io* current-terminal-io))
        (funcall function)))))

(defvar *make-thread-environment-hook* #'default-make-thread-environment-hook)
